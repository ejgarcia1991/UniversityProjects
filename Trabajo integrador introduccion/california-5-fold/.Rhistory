library(readr)
wizmir <- read_csv("R Projects/Trabajo integrador/wizmir/wizmir.dat",
col_names = FALSE, comment = "@")
View(wizmir)
require(MASS)
attach(Boston)
require(kknn)
install.packages("kknn")
require(kknn)
fitknn1 <- kknn(medv ~ ., Boston, Boston)
names(fitknn1)
plot(medv~lstat)
plot(medv~lstat)
plot(medv~lstat)
points(lstat,fitknn1$fitted.values,col="blue",pch=20)
yprime = fitknn1$fitted.values
sqrt(sum((Boston$medv-yprime)^2)/length(yprime))
#Data entry
setwd("C:/Users/Eilder Jorge/Documents/R Projects/Trabajo Integrador")
library(readr)
california <- read_csv("california/california.dat", col_names = FALSE, skip = 13)
datatypes<-scan("california/california.dat",what=character(),sep=" ",nlines=13)
names(california)<-datatypes[seq(4,30,by=3)]
require(kknn)
fitknn1 <- kknn(MedianHouseValue~.,california,california)
plot(medv~lstat)
plot(Boston$medv~lstat)
require(MASS)
plot(Boston$medv~lstat)
plot(Boston$medv~Boston$lstat)
plot(Boston$medv~Boston$lstat)
fitknn1 <- kknn(medv~ .,  Boston, Boston)
plot(Boston$medv~Boston$lstat)
points(lstat,fitknn1$fitted.values,col="blue",pch=20)
points(Boston$lstat,fitknn1$fitted.values,col="blue",pch=20)
fitknn1 <- kknn(MedianHouseValue~.,california,california)
plot(MedianHouseValue~MedianIncome)
attach(california)
plot(MedianHouseValue~MedianIncome)
points(MedianHouseValue,fitknn1$fitted.values,col="blue",pch=20)
fitknn1 <- kknn(MedianHouseValue~.,california,california)
points(MedianHouseValue,fitknn1$fitted.values,col="blue",pch=20)
fitknn1$fitted.values
fitknn1 <- kknn(MedianHouseValue~MedianIncome.,california,california)
attach(california)
fitknn1 <- kknn(MedianHouseValue~MedianIncome.,california,california)
fitknn1 <- kknn(MedianHouseValue~MedianIncome.,california)
fitknn1 <- kknn(MedianHouseValue~california$MedianIncome.,california)
fitknn1 <- kknn(MedianHouseValue~california$MedianIncome,california)
fitknn1 <- kknn(MedianHouseValue~california$MedianIncome,california,california)
points(MedianHouseValue,fitknn1$fitted.values,col="blue",pch=20)
plot(fitknn1)
plot(MedianHouseValue,fitknn1$fitted.values)
points(MedianHouseValue,fitknn1$fitted.values,col="blue",pch=20)
plot(MedianHouseValue~MedianIncome)
plot(MedianHouseValue,fitknn1$fitted.values)
fitknn1 <- kknn(MedianHouseValue~.,california,california)
plot(MedianHouseValue,fitknn1$fitted.values)
summary(fitknn1)
yprime<-predict(fitknn1,california)
yprime<-predict(fitknn1,california)
yprime<-predict(fitknn1,california)
yprime<-fitknn1$fitted.values
sqrt (sum(( california$MedianHouseValue-yprime)^2)/length(yprime))
sum((california$MedianHouseValue-yprime)^2)
sum((california$MedianHouseValue-yprime)^2)/length(yprime)
fitknn4 <- kknn( medv~ . + lstat *rm+I(lstat^2) - chas, Boston, Boston)
yprime=  fitknn4$fitted.values;  sqrt (sum(( Boston$medv-yprime )^2)/length(yprime ))
fitknn2 <- kknn(MedianHouseValue~MedianIncome+I(MedianIncome^2), california, california)
yprime=  fitknn2$fitted.values;  sqrt (sum(( Boston$medv-yprime )^2)/length(yprime ))
yprime=  fitknn2$fitted.values;  sqrt (sum(( MedianHouseValue-yprime )^2)/length(yprime ))
plot(MedianHouseValue,fitknn2$fitted.values)
nombre <- "california/california"
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x," -5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x," -5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))  - 1
names(x_tra)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
nombre <- "california-5-fold/california"
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x," -5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x," -5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))  - 1
names(x_tra)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
setwd("C:/Users/Eilder Jorge/Documents/R Projects/Trabajo Integrador/california-5-fold")
nombre <- "california"
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x," -5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x," -5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))  - 1
names(x_tra)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre," test"))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))  - 1
names(x_tra)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste ("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] < - paste("X",1:In,sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre," test"))
nombre <- "california"
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] < - paste("X",1:In,sep ="")
names(x_tra)[In+1] < - "Y"
names(x_tst)[1:In] < - paste("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
#names(x_tra)[1:In] < - paste("X",1:In,sep ="")
#names(x_tra)[In+1] < - "Y"
#names(x_tst)[1:In] < - paste("X", 1:In, sep ="")
#names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
x_tst<- read.csv(file,  comment.char="@")
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
#names(x_tra)[1:In] < - paste("X",1:In,sep ="")
names(x_tra)[In+1] < - "Y"
#names(x_tst)[1:In] < - paste("X", 1:In, sep ="")
names(x_tst)[In+1] < - "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if  (tt == " train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train "))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre," test"))
lmMSEtrain
lmMSEtest
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if  (tt == "train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train"))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if  (tt == "train") {
test < - x_tra
}
else {
test  <- x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train"))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre,"test"))
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti =lm(Y ~.,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train"))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre,"test"))
lmMSEtrain
lmMSEtest
fit1=lm(Y~X8+I(X8^2)+I(X8^3)+I(log(X3))+I(log(X4/X6))+I(log(X5/X6))+I(log(X6/X7))+I(log(X7)),California)
fit1=lm(Y~X8+I(X8^2)+I(X8^3)+I(log(X3))+I(log(X4/X6))+I(log(X5/X6))+I(log(X6/X7))+I(log(X7)),california)
n <-length(names(california))-1
names(california)[1:n] <- paste ("X", 1:n,  sep ="")
names(california)[n+1] <- "Y"
fit1=lm(Y~X8+I(X8^2)+I(X8^3)+I(log(X3))+I(log(X4/X6))+I(log(X5/X6))+I(log(X6/X7))+I(log(X7)),california)
fit2=lm(Y~., california)
fit3=lm(Y~.+X4*X7*X8,  california)
fit4=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3)+I(X8^4)+X7*X8*X4*X5*X6, california)
summary(fit1)$ adj.r.squared
summary(fit2)$ adj.r.squared
summary(fit3)$ adj.r.squared
summary(fit4)$ adj.r.squared
summary(fit1)
fitMulti=lm(Y ~.,x_tra)
run_lm_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3)+I(X8^4)+X7*X8*X4*X5*X6,x_tra)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_lm_fold,nombre ,"train"))
lmMSEtest <-mean(sapply (1:5,run_lm_fold,nombre,"test"))
lmMSEtrain
lmMSEtest
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~,x_tra,x_tst)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~.,x_tra,x_tst)
yprime=predict( fitMulti,test )
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_knn_fold,nombre ,"train"))
lmMSEtest <-mean(sapply (1:5,run_knn_fold,nombre,"test"))
lmMSEtrain
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~.,x_tra,x_tst)
yprime=fitMulti$fitted.values
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_knn_fold,nombre ,"train"))
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~.,test,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_knn_fold,nombre ,"train"))
lmMSEtrain
lmMSEtest <-mean(sapply (1:5,run_knn_fold,nombre,"test"))
lmMSEtest
?kknn
names(fitknn1)
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~.,x_tra,x_tst)
yprime=fitMulti$fitted.values
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply (1:5,run_knn_fold,nombre ,"train"))
run_knn_fold <- function( i , x,  tt = "test") {
file<- paste(x,"-5-",i,"tra.dat",sep ="")
x_tra<- read.csv(file,  comment.char="@")
file<- paste(x,"-5-",i,"tst.dat",sep ="")
x_tst<- read.csv(file,  comment.char="@")
In<- length(names( x_tra))- 1
names(x_tra)[1:In] <- paste("X",1:In,sep ="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste("X", 1:In, sep ="")
names(x_tst)[In+1] <- "Y"
if(tt == "train") {
test<-x_tra
}
else{
test<-x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y -yprime)^2)/length(yprime) ##MSE
}
knnMSEtest<-mean( sapply (1:5,run_knn_fold,nombre ," test"))
lmMSEtest
knnMSEtest
